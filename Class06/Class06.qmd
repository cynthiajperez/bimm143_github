---
title: "Class 6: R functions"
author: "Cynthia Perez (A16393492)"
format: pdf
---

Functions are how we get work done in R. We call functions to do everything from reading data to doing analysis and outputing plots and results. 

All functions in R have at least three things:

- a **name** (you pick this)
- input **arguments** (there can be one or many)
- the **body** (where the work gets done, this is the code between the curly brackets)

## A first function

Let's write a function to add some numbers. We can call it `add()`


```{r}
x <- 10
y <- 10
x + y
```


```{r}
add <- function(x) {
  y =10
  x + y
}
```

Can I just use my new function?

```{r}
add(1)
```

Let's make it a bit more flexible.

```{r}
add <- function(x, y=1) {
  x + y
}

add(10,10)
```
```{r}
add(10)
```


## 2nd example grade() function

Write a function to grade student work.

We will start simple with a version of the problem and the following example student vectors:

```{r}
# Example input vectors to start with
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)
```

Start with student1
```{r}
mean(student1)
```

Mean of student2
```{r}
mean(student2, na.rm=TRUE)
```

Mean of student3
```{r}
mean(student3, na.rm=TRUE)
```

Okay lets try to work with student1 and find(and drop) the lowest score.
```{r}
student1
```

Use the `min()` and `which.min()` functions to find lowest score:
```{r}
min(student1)
```
```{r}
which.min(student1)
```
```{r}
student1[which.min(student1)]
```
Remaining values for student1 without lowest score:
```{r}
student1[-which.min(student1)]
```
Take the mean of student1 excluding the lowest score:
```{r}
mean(student1[-which.min(student1)])
```
Shorten the code
```{r}
x <- student1
mean(x[-which.min(x)])
```

Our Approach to NA problem (missing homework) we can replace NA values with 0

First task is to find the NA values (i.e., where are they in the vector)
```{r}
x <- student2
x
```
```{r}
is.na(x)
```

I have found the NA (TRUE) values from `is.na()` now I want to make them equal to zero.
```{r}
x[is.na(x)] <- 0
x
```
I want to combine the `is.na(x)` and take this "masked" (vector of student scores with NA values as zero) and drop the lowest to get the mean.
```{r}
mean(x[-which.min(x)])
```

Now onto student3 with the working code snippet.
```{r}
x <- student3
x[is.na(x)] <- 0
mean(x[-which.min(x)])
```

Now we can turn this snippet into my first function.
```{r}
grade <- function(x) {
  # Make NA values equal to zero
  x[is.na(x)] <- 0
  # Drop lowest score and take the mean
  mean(x[-which.min(x)])
}
```

Test run the function on students 1, 2, and 3
```{r}
grade(student1)

grade(student2)

grade(student3)
```

> Q1. Write a function grade() to determine an overall grade from a vector of student homework assignment scores dropping the lowest single score. If a student misses a homework (i.e. has an NA value) this can be used as a score to be potentially dropped. Your final function should be adquately explained with code comments and be able to work on an example class gradebook such as this one in CSV format: “https://tinyurl.com/gradeinput” [3pts]


```{r}
url <- "https://tinyurl.com/gradeinput"
gradebook <- read.csv(url, row.names = 1)
head(gradebook)
```


The `apply()` function in R is helpful but can be a little confusing to begin with. Use apply function to use the grade function on all students in the gradebook. 
```{r}
#use 1 for rows and 2 for columns
class <- apply(gradebook, 1, grade)
class
```

> Q2. Using your grade() function and the supplied gradebook, Who is the top scoring student overall in the gradebook? [3pts]

```{r}
which.max(class)

max(class)
```

> Q3. From your analysis of the gradebook, which homework was toughest on students (i.e. obtained the lowest scores overall? [2pts]

Use `which.min()` function and change the margin argument for `apply()` to 2 (gives means of the columns-homeworks). 
```{r}
which.min(apply(gradebook, 2, mean, na.rm=TRUE))
```





> Q4. Optional Extension: From your analysis of the gradebook, which homework was most predictive of overall score (i.e. highest correlation with average grade score)? [1pt]

use `cor()` function to determine correlation between homeworks and grades for the entire class.
```{r}
#class
cor(gradebook$hw5, class)
gradebook$hw5
#have NAs in some assignments
```
Need to mask all NAs to zero
```{r}
mask <- gradebook
mask[is.na(mask)] <- 0
```

Now we can take the correlation with NAs set to zero. 
```{r}
cor(mask$hw5, class)
```

Now we can use `apply()` to examine the correlation of every assignment in the masked gradebook to the overall score for the class. 
```{r}
apply(mask, 2, cor, y=class)
```
```{r}
which.max(apply(mask, 2, cor, y=class))
```