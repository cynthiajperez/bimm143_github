---
title: "Class14: RNA-Seq Analysis Mini Project"
author: "Cynthia Perez (A16393492)"
format: pdf
toc: true
---

Here we run through ac omplete RNASeq Analysis from counts to pathways and biological insight...

# Data Import
First we load DESeq
```{r}
library(DESeq2)
```

Import our data
```{r}
metaFile <- "GSE37704_metadata.csv"
countFile <- "GSE37704_featurecounts.csv"

# Import metadata and take a look
colData = read.csv(metaFile, row.names=1)
head(colData)

# Import countdata
countData = read.csv(countFile, row.names=1)
head(countData)
```

# Setup for DESeq

We need to remove the length column from countData in order to match up with colData
```{r}
# remove the first $length col
countData.new <- as.matrix(countData[,-1])
head(countData.new)
```

Now we have to filter out genes that have 0 read counts
```{r}
# Filter count data where you have 0 read count across all samples.
countData.reads <- countData.new[-which(rowSums(countData.new) == 0), ]
head(countData.reads)
```

# Running DESeq

```{r}
library(DESeq2)

dds <- DESeqDataSetFromMatrix(countData=countData.reads,
                             colData=colData,
                             design=~condition)
dds <- DESeq(dds)
dds
```

Get results for hoxa1_kd and control_sirna
```{r}
res = results(dds, contrast=c("condition", "hoxa1_kd", "control_sirna"))
summary(res)
```

### Volcano Plot
```{r}
# Make a color vector for all genes
mycols <- rep("gray", nrow(res))

# Color red the genes with absolute fold change above 2
mycols[ abs(res$log2FoldChange) > 2 ] <- "red"

# Color blue those with adjusted p-value less than 0.01
#  and absolute fold change more than 2
inds <- (res$padj < 0.01) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "blue"

plot( res$log2FoldChange, -log(res$padj), col=mycols, xlab="Log2(FoldChange)", ylab="-Log(P-value)" )
```

# Add gene annotation data 

```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")

columns(org.Hs.eg.db)

res$symbol = mapIds(org.Hs.eg.db,
                    keys=row.names(res), 
                    keytype="ENSEMBL",
                    column="SYMBOL",
                    multiVals="first")

res$entrez = mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="ENTREZID",
                    multiVals="first")

res$name =   mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="GENENAME",
                    multiVals="first")

head(res, 10) 
```

We should save to a csv file in our project directory
```{r}
res = res[order(res$pvalue),]
write.csv(res, file ="deseq_results.csv")
```


# Pathway analysis (KEGG, GO, Reactome)

### KEGG
First we load up the pathview, gage, and gageData package
```{r}
library(pathview)
library(gage)
library(gageData)

data(kegg.sets.hs)
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)
```
Create vector of fold changes
```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```
Run the gage pathway analysis
```{r}
# Get the results
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```

Look at what is returned from `gage()`
```{r}
attributes(keggres)
# Look at the first few down (less) pathways
head(keggres$less)
```

Now use `pathview()` function to create a pathway plot
```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110")
```
![Cell Cycle pathway plot](hsa04110.pathview.png)

```{r}
# A different PDF based output of the same data
pathview(gene.data=foldchanges, pathway.id="hsa04110", kegg.native=FALSE)
```

Create vector of top 5 pathways
```{r}
## Focus on top 5 upregulated pathways here for demo purposes only
keggrespathways <- rownames(keggres$greater)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```

Pass these top 5 pathways into pathview
```{r}
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```
![](hsa04640.pathview.png)
![](hsa04630.pathview.png)
![](hsa00140.pathview.png)
![](hsa04142.pathview.png)
![](hsa04330.pathview.png)
Pathway plots for the bottom 5
```{r}
## Focus on top 5  down regulated pathways here for demo purposes only
keggrespathways.down <- rownames(keggres$less)[1:5]

# Extract the 8 character long IDs part of each string
keggresids.down = substr(keggrespathways.down, start=1, stop=8)
keggresids.down

pathview(gene.data=foldchanges, pathway.id=keggresids.down, species="hsa")
```


### GO

Focus on biological processes
```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)

lapply(gobpres, head)
```




### Reactome

We can use Reactome in R as a package or it can also be accessed online. It contains interactive visualization features. 

```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
print(paste("Total number of significant genes:", length(sig_genes)))
```

```{r}
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)
```

Then upload significant_genes.txt" file to the reactome website **https://reactome.org/PathwayBrowser/#TOOL=AT**

![Miotic Spindle Checkpoint Pathway](R-HSA-69620.png)

> Q: What pathway has the most significant “Entities p-value”? Do the most significant pathways listed match your previous KEGG results? What factors could cause differences between the two methods?

The cell cycle has the most significant "Entities p-value". This matches the significant pathway listed from KEGG results. 

