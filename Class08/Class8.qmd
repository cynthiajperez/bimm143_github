---
title: "Class8: Breast Cancer Mini Project"
author: "Cynthia Perez (A16393492)"
format: pdf
---

## About
In today's lab we will use techniques covered in class to perform a PCA on fine needle aspiration (FNA) of breast cancer mass from the University of Wisoncin 

## Data Import

```{r}
wisc.df <- read.csv("WisconsinCancer.csv", row.names=1)
head(wisc.df)
```

> Q1. How many patients/individuals/samples are in this dataset

Use `nrow()`
```{r}
nrow(wisc.df)
```

> Q2. How many of the observations have a malignant diagnosis?

Use either `table()` or `sum()` funcitons
```{r}
table(wisc.df$diagnosis)

sum(wisc.df$diagnosis =="M")
```

> Q3. How many variables/features in the data are suffixed with _mean?

Use `grep()` function
```{r}
ncol(wisc.df)

colnames(wisc.df)

inds <- grep("_mean", colnames(wisc.df))
length(inds)
```


## Initial Analysis
Remove "diagnosis" column before clustering the data.
```{r}
wisc.data <- wisc.df[,-1]
```

Create diagnosis vector for later use
```{r}
diagnosis <- as.factor(wisc.df$diagnosis)
head(diagnosis)
```

## Clustering

We can try `kmeans()` clustering first
```{r}
km <- kmeans(wisc.data, centers=2)

#use membership vector to determine what cluster each input is in
table(km$cluster)
```

Cross-table
```{r}
table(km$cluster, diagnosis)
```

Let's try `hclust()`. The key input required for this function is a distance matrix as produced by the `dist()` function
```{r}
hc <- hclust(dist(wisc.data))
```

We can make a dendrogram with hc vector
```{r}
plot(hc)
```

## PCA

Check sd of the data
```{r}
# Check column means and standard deviations
round(apply(wisc.data,2,sd))
```

Scale the data before when we PCA. `prcomp()` with `scale=TRUE`.
```{r}
wisc.pr <- prcomp(wisc.data, scale=TRUE)
summary(wisc.pr)
```

Generate our main PCA plot (score plot, PC1 v PC2 plot)
```{r}
library(ggplot2)

res <- as.data.frame(wisc.pr$x)
```

```{r}
ggplot(res) +
  aes(PC1, PC2, col=diagnosis) +
  geom_point()
```

## Combining methods

Clustering on PCA results
```{r}
d <- dist(wisc.pr$x[,1:3])
hc <- hclust(d, method = "ward.D2")
plot(hc)
```

To get my clustering result/membership vector I need to "cut" the tree with `cutree()` function.
```{r}
grps <- cutree(hc, k=2)
```

> Q. How many patients are in each group

```{r}
table(grps)
```
Color plot by groups
```{r}
plot(res$PC1, res$PC2, col=grps)
```


## Prediction

We can use our PCA result (model) to do predictions, that is take new unseen data and project it onto our new PC variables.
```{r}
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
```
Make plot
```{r}
plot(res$PC1, res$PC2, col=grps)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], labels=c(1,2), col="white")
```

# Summary

Principal Component Analysis is a super useful method for analyzing large datasets. It works by finding new variables (PCs) that capture the most variance from the original variables in your dataset. 



